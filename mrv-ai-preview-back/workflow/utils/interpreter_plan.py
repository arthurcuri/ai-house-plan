from llm_factory import interpretar_planta_com_imagem
import io
from PIL import Image

def interpretar_planta_com_ocr(image_bytes: bytes, texto_ocr: list, tipo_apartamento: str):
    """
    Interpreta uma planta baixa usando OCR e LLM
    
    Args:
        image_bytes: Bytes da imagem da planta
        texto_ocr: Lista de textos extra√≠dos por OCR
        tipo_apartamento: Tipo do apartamento (class, eco, bio, essential)
    
    Returns:
        Resposta da LLM interpretando a planta
    """
    
    # ‚úÖ Prompt estruturado para a LLM interpretar (SEM tipo de apartamento)
    prompt = f"""
Voc√™ √© um assistente especialista em interpreta√ß√£o de plantas arquitet√¥nicas residenciais.

Com base no seguinte texto extra√≠do por OCR da planta:

{texto_ocr}

E considerando a imagem da planta fornecida, identifique com o m√°ximo de precis√£o:

1. Quais s√£o os c√¥modos presentes?
2. Quais s√£o as dimens√µes aproximadas de cada um (em cm)?
3. Qual a localiza√ß√£o relativa de cada c√¥modo (ex: 'superior esquerdo', 'centro', etc)?

Responda em formato JSON estruturado. Seja preciso e conciso.
"""

    # ‚úÖ Chamada para a LLM
    resposta = interpretar_planta_com_imagem(prompt, image_bytes)
    
    return resposta

# ‚úÖ Exemplo de uso (mantido para compatibilidade)
if __name__ == "__main__":
    # ‚úÖ Caminho absoluto da imagem da planta
    CAMINHO_IMAGEM = r"C:\Users\lucas.nogueira\Documents\projetos_pessoais\mrv-ai\mrv-house-plan\mrv-ai-preview-back\workflow\planta01.jpg"

    # ‚úÖ OCR real extra√≠do via EasyOCR
    texto_ocr = [
        "QUARTO", "QUARTO", "240", "122", "120", "230",
        "140", "CIRC.", "192", "254", "140", "SALACOZINHAAS"
    ]

    # ‚úÖ Leitura da imagem como bytes
    with open(CAMINHO_IMAGEM, "rb") as f:
        image_bytes = f.read()

    # ‚úÖ Teste da fun√ß√£o com tipo
    resposta = interpretar_planta_com_ocr(image_bytes, texto_ocr, "class")
    
    # ‚úÖ Resultado
    print("üß† Resposta da LLM:\n")
    print(resposta)
